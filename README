Задача 1
Дана строка, содержащая n маленьких букв латинского алфавита. Требуется реализовать
алгоритм компрессии этой строки, замещающий группы последовательно идущих
одинаковых букв формой "sc" (где "s" – символ, "с" – количество букв в группе), а также
алгоритм декомпрессии, возвращающий исходную строку по сжатой.
Если буква в группе всего одна – количество в сжатой строке не указываем, а пишем её
как есть.
Пример:
Исходная строка: aaabbcccdde
Сжатая строка: a3b2c3d2e

Задача 2
Есть "сервер" в виде статического класса.
У него есть переменная count (тип int) и два метода, которые позволяют эту
переменную читать и писать: GetCount() и AddToCount(int value).
К классу–"серверу" параллельно обращаются множество клиентов, которые в основном
читают, но некоторые добавляют значение к count.
Нужно реализовать статический класс с методами GetCount / AddToCount так,
чтобы:
 читатели могли читать параллельно, не блокируя друг друга;
 писатели писали только последовательно и никогда одновременно;
 пока писатели добавляют и пишут, читатели должны ждать окончания записи.

Задача 3
Консольная программа для стандартизации лог-файлов
Эта программа предназначена для обработки лог-файлов, содержащих записи в двух
разных форматах. Цель программы – привести все записи к единому, стандартному виду,
упрощая анализ и обработку логов.
Необходимо преобразовать записи из входного лог-файла в единый формат и сохранить
их в выходной файл.
Форматы входных файлов
Формат 1: 10.03.2025 15:14:49.523 INFORMATION Версия программы: '3.4.0.48729'
Дата: 10.03.2025
Время: 15:14:49.523
УровеньЛогирования: INFORMATION
Сообщение: Версия программы: ‘3.4.0.48729’
Формат 2: 2025-03-10 15:14:51.5882| INFO|11|MobileComputer.GetDeviceId| Код
устройства: '@MINDEO-M40-D-410244015546'
Дата: 2025-03-10
Время: 15:14:51.5882
УровеньЛогирования: INFO
ВызвавшийМетод: MobileComputer.GetDeviceId
Сообщение: Код устройства: ‘@MINDEO-M40-D-410244015546’
Выходной формат
Формат: Дата
Разделитель между полями: Табуляция.
Дата: Формат DD-MM-YYYY (день-месяц-год).
Время: Сохраняется в исходном формате.
УровеньЛогирования: может иметь одно из нескольких значений:
1)INFO (INFORMATION)
2)WARN (WARNING)
3)ERROR
4)DEBUG
Эти значения выбираются в зависимости от УровеньЛогирования входной записи.
Пример:
10.03.2025 15:14:49.523 INFORMATION Версия программы: '3.4.0.48729' -
УровеньЛогирования для этой входной записи INFORMATION, но на выходной записи
должен быть INFO, такая же логика и у WARNING - WARN.